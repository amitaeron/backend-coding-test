{
  "openapi" : "3.0.0",
  "info" : {
    "version" : "1.0.0-oas3",
    "title" : "REST API",
    "description" : "This is a Node.js project that contains APIs which can be used for saving and fetching rides"
  },
  "host" : "localhost:8010",
  "basePath" : "/",
  "tags" : [ ],
  "schemes" : [ "http" ],
  "securityDefinitions" : { },
  "consumes" : [ ],
  "produces" : [ ],
  "paths" : {
    "/health" : {
      "get" : {
        "tags" : [ ],
        "summary" : "Status of server",
        "description" : "Check the status of server",
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "Healthy"
          }
        }
      }
    },
    "/rides" : {
      "post" : {
        "tags" : [ ],
        "summary" : "Post the ride",
        "description" : "Save a ride to the DB",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/ridePayload"
              }
            }
          }
        },
        "responses" : {
          "201" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ride"
                },
                "example" : {
                  "rideID" : 1,
                  "startLat" : -2,
                  "startLong" : -43,
                  "endLat" : 78,
                  "endLong" : 89,
                  "riderName" : "abc",
                  "driverName" : "xyz",
                  "driverVehicle" : "zzzz",
                  "created" : "2020-11-02 15:57:52"
                }
              }
            },
            "description" : "Ride Created"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/error"
                },
                "example" : {
                  "error_code" : "VALIDATION_ERROR",
                  "message" : "Start latitude and longitude must be between 90 - 90 and -180 to 180 degrees respectively"
                }
              }
            },
            "description" : "Validation Error"
          },
          "500" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/error"
                },
                "example" : {
                  "error_code" : "SERVER_ERROR",
                  "message" : "Unknown error"
                }
              }
            },
            "description" : "Internal Server Error"
          }
        }
      },
      "get" : {
        "tags" : [ ],
        "summary" : "Get Rides",
        "description" : "Get a ride from DB",
        "parameters" : [ {
          "name" : "pageNumber",
          "in" : "query",
          "required" : true,
          "description" : "Page Number",
          "schema" : {
            "type" : "integer"
          }
        }, {
          "name" : "recordPerPage",
          "in" : "query",
          "required" : true,
          "description" : "Record Per Page",
          "schema" : {
            "type" : "integer"
          }
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ridePagination"
                },
                "example" : {
                  "recordCount" : 1,
                  "rides" : [ {
                    "rideID" : 1,
                    "startLat" : -2,
                    "startLong" : -43,
                    "endLat" : 78,
                    "endLong" : 89,
                    "riderName" : "abc",
                    "driverName" : "xyz",
                    "driverVehicle" : "zz",
                    "created" : "2020-11-02 15:57:52"
                  } ]
                }
              }
            },
            "description" : "All Rides"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/error"
                },
                "example" : {
                  "error_code" : "VALIDATION_ERROR",
                  "message" : "Missing PageNumber or RecordPerPage parameter."
                }
              }
            },
            "description" : "Bad Request"
          },
          "404" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/error"
                },
                "example" : {
                  "error_code" : "RIDES_NOT_FOUND_ERROR",
                  "message" : "Could not find any rides"
                }
              }
            },
            "description" : "Not Found"
          },
          "500" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/error"
                },
                "example" : {
                  "error_code" : "SERVER_ERROR",
                  "message" : "Unknown error"
                }
              }
            },
            "description" : "Internal Server Error"
          }
        }
      }
    },
    "/rides/{id}" : {
      "get" : {
        "tags" : [ ],
        "summary" : "Get a ride",
        "description" : "Get details of a ride matching with given id",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "description" : "Id of the ride",
          "schema" : {
            "type" : "integer"
          }
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ride"
                },
                "example" : {
                  "rideID" : 1,
                  "startLat" : -2,
                  "startLong" : -43,
                  "endLat" : 78,
                  "endLong" : 89,
                  "riderName" : "abc",
                  "driverName" : "xyz",
                  "driverVehicle" : "zz",
                  "created" : "2020-11-02 15:57:52"
                }
              }
            },
            "description" : "Ride"
          },
          "404" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/error"
                },
                "example" : {
                  "error_code" : "RIDES_NOT_FOUND_ERROR",
                  "message" : "Could not find any rides"
                }
              }
            },
            "description" : "Not Found"
          },
          "500" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/error"
                },
                "example" : {
                  "error_code" : "SERVER_ERROR",
                  "message" : "Unknown error"
                }
              }
            },
            "description" : "Internal Server Error"
          }
        }
      }
    }
  },
  "definitions" : { },
  "components" : {
    "schemas" : {
      "error" : {
        "type" : "object",
        "properties" : {
          "error_code" : {
            "type" : "string",
            "enum" : [ "VALIDATION_ERROR", "SERVER_ERROR", "RIDES_NOT_FOUND_ERROR" ]
          },
          "message" : {
            "type" : "string"
          }
        }
      },
      "ride" : {
        "type" : "object",
        "properties" : {
          "rideID" : {
            "type" : "string",
            "description" : "Ride ID"
          },
          "startLat" : {
            "type" : "string",
            "description" : "Start Latitude"
          },
          "startLong" : {
            "type" : "string",
            "description" : "Start Longitude"
          },
          "endLat" : {
            "type" : "string",
            "description" : "End Latitude"
          },
          "endLong" : {
            "type" : "string",
            "description" : "End Longitude"
          },
          "riderName" : {
            "type" : "string",
            "description" : "Rider Name"
          },
          "driverName" : {
            "type" : "string",
            "description" : "Driver Name"
          },
          "driverVehicle" : {
            "type" : "string",
            "description" : "Driver Vehicle"
          },
          "createdAt" : {
            "type" : "string",
            "description" : "Creation Date"
          }
        }
      },
      "ridePayload" : {
        "type" : "object",
        "properties" : {
          "start_lat" : {
            "type" : "integer",
            "description" : "Start Latitude"
          },
          "end_lat" : {
            "type" : "integer",
            "description" : "End Latitude"
          },
          "start_long" : {
            "type" : "integer",
            "description" : "Start Longitude"
          },
          "end_long" : {
            "type" : "integer",
            "description" : "End Longitude"
          },
          "rider_name" : {
            "type" : "string",
            "description" : "Rider Name"
          },
          "driver_name" : {
            "type" : "string",
            "description" : "Driver Name"
          },
          "driver_vehicle" : {
            "type" : "string",
            "description" : "Driver Vehicle"
          }
        }
      },
      "ridePagination" : {
        "type" : "object",
        "properties" : {
          "recordsCount" : {
            "type" : "integer",
            "description" : "Count of records"
          },
          "rides" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/ride"
            }
          }
        }
      }
    }
  }
}